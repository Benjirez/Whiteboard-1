{
  "name": "Kainos Whiteboard",
  "tagline": "An interactive collaborative whiteboard web application",
  "body": "# Overview\r\nThe goal of Kainos Whiteboard is to allow people to collaborate on projects through its whiteboard functionality and use of real time communication. Using webRTC it allows for in-browser video conferencing and its whiteboard feature allows any participant in the call to effectively plan or communicate their ideas through drawing sketches and diagrams that can be moved, rotated and deleted as needed. It aims to improve the way teams work together across multiple geographical locations.\r\n\r\n## Online Access\r\nTo access the Kainos Collaborative Whiteboard through your browser, go to the following link: https://kainoswhiteboard.herokuapp.com/ \r\n\r\nThis will allow you to communicate with others. However, you will not be able to use your own XirSys account or SMTP server and you will be unable to add any new contacts for the “Create New Meeting” screen.\r\n___\r\n\r\n\r\n# Local Installation\r\n### Prerequisites\r\nYou will need to download:\r\n* Node.js version 0.10.25 - The installer for this can be found here: https://nodejs.org/en/blog/release/v0.10.25/ \r\n* Npm version 3.3.10 - Installation instructions for this can be found here: https://www.versioneye.com/nodejs/npm/3.3.10\r\n\r\n\r\n### Installation\r\n1. In Terminal/Command Line run: git clone https://github.com/KainosSoftwareLtd/Whiteboard.git \r\n2. In the whiteboard folder run npm install to download all required dependencies.\r\n3. Change directory to the bin folder and run node www\r\n4. You now can access the site at http://localhost:3000/ \r\n\r\n___\r\n\r\n\r\n# Configuration\r\n###XirSys\r\nYou will also need to create a XirSys account. This can be done via their website:\r\nhttps://xirsys.com/ \r\n\r\nOnce you have created an account you will need to enter the following details to the “user.json” file in the format outlined below:\r\n\r\n\r\n```javascript\r\n{   \r\n    \"form\": \r\n    {\r\n         \"ident\": \"UserName\",\r\n         \"secret\": \"API_Authentication_Key\",\r\n         \"domain\": \"YourDomain\",\r\n         \"application\": \"YourApplication\",\r\n         \"room\": \"YourRoom\",\r\n         \"secure\": 1\r\n    },\r\n    \"json\": true\r\n}\r\n\r\n```\r\n\r\n### SMTP\r\nIn order to make use of the invite email functionality you will also need to add an SMTP server.\r\n \r\nA gmail account provides an SMTP server. This will need to be added to the invite.js file (whiteboard/routes/invite.js) as shown below:\r\n\r\n`var transporter = nodemailer.createTransport('smtps://<YourDomain>%40gmail.com:<YourPassword>@smtp.gmail.com');`\r\n\r\nA default SMTP server is currently utilised in the code. It is the following:\r\n`var transporter = nodemailer.createTransport('smtps://whiteboardtest1%40gmail.com:Wh1t3board@smtp.gmail.com');`\r\n\r\nIf you wish to add your own SMTP server this must be replaced.\r\n\r\n### Adding Contacts\r\nCurrently displaying people that are available to invite is handled as part of InviteCtrl.js (whiteboard/public/js/controllers/InviteCtrl.js) as shown below:\r\n\r\n```javascript\r\n{\r\n id: 1,\r\n userImage: ***REMOVED***\r\n name: Test Name,\r\n department: 'Test Department',\r\n email: 'testdepartment@kainos.com'\r\n}\r\n```\t\r\n\r\nIn order to add people to invite for this meeting their details will need to be added to this file in the appropriate format and each person must have a unique id. Therefore, if I wanted to add a second potential invitee I would add:\r\n\r\n```javascript\r\n{\r\n  id: 1,\r\n  userImage: ***REMOVED***\r\n  name: Test Name,\r\n  department: 'Test Department',\r\n  email: 'testdepartment@kainos.com'\r\n},\t\r\n\r\n{\r\n id: 2,\r\n userImage: ***REMOVED***\r\n name: Test Name2,\r\n department: 'Test Department2',\r\n email: 'testdepartment2@kainos.com'\r\n}\r\n```\r\n\r\n___\r\n\r\n#Testing\r\nTesting\r\nTo run associated tests Karma must be installed. To do this follow the instructions on the Karma website. \r\n\r\nRun karma start `karma.conf.js` from the whiteboard folder in terminal. Test output will be displayed in the terminal.\r\n\r\n___\r\n\r\n#Q&A\r\n**Q: What browsers are supported?**\r\n\r\n**A:** Currently most browsers except for Safari support webRTC to some capacity. More in-depth details can be found here, http://iswebrtcreadyyet.com/ \r\n\r\n\r\n**Q: How many connections can there be to any one meeting?**\r\n\r\n**A:** 4 users/connections can access a room at any 1 time\r\n\r\n\r\n**Q: Are there any costs associated with a XirSys account?**\r\n\r\n**A:** This depends on the plan you choose. XirSys offer a free plan which provides 100MB, 10 concurrent TURN connections and unlimited STUN usage.\r\n\r\n___\r\n\r\n# Authors\r\n• **Michael Kemp** – Initial creator of the project\r\n\r\n• **Corey Duffy** – Making project open source and bug fixes\r\n\r\n\r\n___\r\n\r\n#License\r\nThis project is licensed under the MIT License.\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}